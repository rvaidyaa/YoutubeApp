{"version":3,"sources":["components/search_bar.js","components/video_list_item.js","components/video_list.js","components/video_detail.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","setState","onSearchTermChange","_this2","react_default","a","createElement","className","value","onChange","event","onInputChange","target","Component","VideoListItem","_ref","video","onVideoSelect","imageUrl","snippet","thumbnails","default","url","onClick","class","src","title","VideoList","videoItems","videos","map","components_video_list_item","key","etag","VideoDetail","videoId","id","concat","description","Header","App","selectedVideo","videoSearch","YTSearch","_this3","_","debounce","components_header","components_search_bar","components_video_detail","components_video_list","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0171446.chunk.js","sourcesContent":["//Needs to be in all components that contain JSX\r\nimport React, { Component } from 'react';\r\nimport './search_bar.css'\r\n\r\n//HTML for user to type in to\r\n//Define a new class (SearchBar) and give functionality of React.Component class\r\n\r\n// class SearchBar extends Component {\r\n//     render() { \r\n//         return <input onChange={this.onInputChange}/>;\r\n//     }\r\n//     //handle or on, name of element, what its doing (change, submit, keypress)\r\n//     onInputChange(event) {\r\n//         console.log(event.target.value);\r\n//     }\r\n// }\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { term: ''};  \r\n    }\r\n    onInputChange(term) {\r\n        this.setState({term});\r\n        this.props.onSearchTermChange(term);\r\n    }\r\n    render() { \r\n        return (\r\n            <div className='search-bar'>\r\n        <input\r\n        value={this.state.term} \r\n        onChange={event=> this.onInputChange(event.target.value)} />\r\n        </div> \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\nimport './video_list_item.css';\r\n\r\nconst VideoListItem = ({ video, onVideoSelect }) => {\r\n  const imageUrl = video.snippet.thumbnails.default.url;\r\n  // const video = props.video;\r\n  // same as ({video}), has a prop video, grab and declare new var(video)\r\n  return (\r\n    <li onClick={() => onVideoSelect(video)} className=\"list-group-item\">\r\n      \r\n        <div class=\"card horizontal\">\r\n          <div class=\"card-image\">\r\n            <img src={imageUrl} />\r\n          </div>\r\n          <div class=\"card-stacked\">\r\n            <div class=\"card-content\">\r\n              <p>\r\n              {video.snippet.title}\r\n              </p>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      \r\n    </li>\r\n    \r\n    \r\n  );\r\n  \r\n};\r\n\r\nexport default VideoListItem;\r\n","import React from 'react';\r\nimport VideoListItem from './video_list_item';\r\nimport './video_list.css'\r\n// export const Component = (props) => {\r\n//     return(\r\n//         <div>\r\n//             {props.children}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Component\r\n\r\nconst VideoList = (props) => {\r\n    const videoItems = props.videos.map((video) => {\r\n        return (\r\n         <VideoListItem\r\n         onVideoSelect={props.onVideoSelect}\r\n         key={video.etag}\r\n          video={video} />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"col-md-4 list-group\">\r\n            {videoItems}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default VideoList;","import React from \"react\";\r\nimport './video_detail.css'\r\nconst VideoDetail = ({ video }) => {\r\n  if (!video) {\r\n      return <div>Loading...</div>;\r\n  }\r\n    \r\n  const videoId = video.id.videoId;\r\n//const url = \"https://www.youtube.com/embed\" + videoId;\r\n  const url = `https://www.youtube.com/embed/${videoId}`;\r\n  return (\r\n    <div className=\"video-detail col-md-8\">\r\n      <div className=\"embed-responsive embed-responsive-16by9\">\r\n        <iframe className=\"embed-responsive-item\" src={url}></iframe>\r\n      </div>\r\n      <div className=\"details\">\r\n        <p className='card-title '>{video.snippet.title}</p>\r\n        <div>{video.snippet.description}</div>\r\n      </div>\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav>\r\n    <div class=\"nav-wrapper\">\r\n      <span class=\"brand-logo center embed-responsive-item\">Youtube Quick Search</span>\r\n      \r\n    </div>\r\n    </nav>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport YTSearch from \"youtube-api-search\";\nimport _ from 'lodash'\nimport \"./App.css\";\n//From current directory (./) go into components folder, find file search_bar\nimport SearchBar from \"./components/search_bar\";\nimport VideoList from \"./components/video_list\";\nimport VideoDetail from \"./components/video_detail\";\nimport Header from \"./components/header\";\nimport 'materialize-css/dist/css/materialize.css'\n\nconst API_KEY = \"AIzaSyDyaBH5-6yUGGEdZgP44fQYDyjUEabUTBk\";\n//https://github.com/gitname/react-gh-pages  deploy\n// Create a new component. This component should produce some HTML.\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      term: \"\"\n    };\n\n    this.videoSearch(\"surfboards\");\n  }\n\n  videoSearch(term) {\n    YTSearch({ key: API_KEY, term: term }, videos => {\n      this.setState({\n        videos: videos,\n        selectedVideo: videos[0]\n      });\n    });\n  }\n\n  render() {\n    const videoSearch = _.debounce(term => {\n      this.videoSearch(term);\n    }, 300);\n\n    return (\n      <div className=\"container\">\n        <Header />\n        <SearchBar onSearchTermChange={videoSearch} />\n        <VideoDetail video={this.state.selectedVideo} />\n        <VideoList\n          onVideoSelect={selectedVideo => this.setState({ selectedVideo })}\n          videos={this.state.videos}\n        />\n      </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}